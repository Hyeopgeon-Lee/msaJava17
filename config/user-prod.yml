management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      enabled: true
      show-details: always
    beans:
      enabled: true
    info:
      enabled: true
    shutdown:
      enabled: true
  server:
    port: ${USER-SERVICE-PORT}  # Actuator가 애플리케이션과 동일한 포트에서 실행됨
spring:
  jpa:
    generate-ddl: 'false'
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        default_batch_fetch_size: 100 # Fetch Join
        format_sql: 'true'
        use_sql_comments: 'true'
    show-sql: 'true'
    open-in-view: 'false'
  datasource:
    driver-class-name: org.mariadb.jdbc.Driver
    password: ${MARIADB-PASSWORD}
    username: ${MARIADB-USER}
    url: jdbc:mariadb://${MARIADB-IP}:${MARIADB-PORT}/myDB
  application:
    name: USER-SERVICE
  boot:
    admin:
      client: # Spring Boot Actuator Admin UI Server
        url: http://${ADMIN-MANAGER-IP}:${ADMIN-MANAGER-PORT}
jwt:
  token:
    creator: poly
    refresh:
      valid:
        time: '3000'
      name: jwtRefreshToken
    access:
      valid:
        time: '300'
      name: jwtAccessToken
  secret:
    key: '12345678123456781234567812345678123456781234'
server:
  port: ${USER-SERVICE-PORT}  # 애플리케이션 포트 설정
api:
  gateway: ${API-GATEWAY-IP}:${API-GATEWAY-PORT}
